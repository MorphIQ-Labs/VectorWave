name: Deploy Javadocs

on:
  workflow_dispatch:
  push:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build-javadocs:
    name: Build Javadocs (Core + Extensions)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Oracle JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'oracle'
          java-version: '21'

      - name: Record JDK21_HOME
        run: echo "JDK21_HOME=${JAVA_HOME_21_X64}" >> $GITHUB_ENV

      - name: Set up Oracle JDK 24
        uses: actions/setup-java@v4
        with:
          distribution: 'oracle'
          java-version: '24'

      - name: Cache Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-pages-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-pages-m2

      - name: Write toolchains.xml
        run: |
          mkdir -p ~/.m2
          cat > ~/.m2/toolchains.xml << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <toolchains>
            <toolchain>
              <type>jdk</type>
              <provides>
                <version>21</version>
              </provides>
              <configuration>
                <jdkHome>${JDK21_HOME}</jdkHome>
              </configuration>
            </toolchain>
            <toolchain>
              <type>jdk</type>
              <provides>
                <version>24</version>
              </provides>
              <configuration>
                <jdkHome>${JAVA_HOME_24_X64}</jdkHome>
              </configuration>
            </toolchain>
          </toolchains>
          EOF

      - name: Build all modules (no tests)
        run: mvn -B -DskipTests install

      - name: Build core Javadocs (module)
        run: |
          mvn -B -DskipTests -Dmaven.javadoc.skip=false -pl vectorwave-core -am javadoc:javadoc

      - name: Build extensions Javadocs (module)
        run: |
          mvn -B -DskipTests -pl vectorwave-extensions -am javadoc:javadoc

      - name: Prepare Pages artifact
        run: |
          set -euo pipefail
          mkdir -p javadoc-site/core javadoc-site/extensions
          cp -a docs/javadoc/index.html javadoc-site/index.html
          # Disable Jekyll on GitHub Pages so Javadoc assets aren't stripped
          touch javadoc-site/.nojekyll
          # Copy core apidocs (handle both plugin output locations)
          if [ -d vectorwave-core/target/site/apidocs ]; then
            cp -a vectorwave-core/target/site/apidocs/. javadoc-site/core/
          elif [ -d vectorwave-core/target/apidocs ]; then
            cp -a vectorwave-core/target/apidocs/. javadoc-site/core/
          else
            echo "Core Javadocs not found" >&2; ls -R vectorwave-core/target || true; exit 1
          fi
          # Copy extensions apidocs (handle both plugin output locations)
          if [ -d vectorwave-extensions/target/site/apidocs ]; then
            cp -a vectorwave-extensions/target/site/apidocs/. javadoc-site/extensions/
          elif [ -d vectorwave-extensions/target/apidocs ]; then
            cp -a vectorwave-extensions/target/apidocs/. javadoc-site/extensions/
          else
            echo "Extensions Javadocs not found" >&2; ls -R vectorwave-extensions/target || true; exit 1
          fi
          echo "Final Pages artifact contents:" && ls -R javadoc-site

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: javadoc-site

  deploy:
    name: Deploy to GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-javadocs
    steps:
      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v4
